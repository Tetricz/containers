pipeline {
    environment{
        Blahblah=''
    }
    agent any
    stages {
        stage('Parallel builds'){
            parallel {
                stage('Start AMD64 build'){
                    steps{
                        build 'yt-archive-amd64'
                    }
                    post{
                        failure{
                            echo "AMD64 build failed"
                        }
                    }
                }
                stage('Start ARM64 build'){
                    steps{
                        build 'yt-archive-aarch64'
                    }
                    post{
                        failure{
                            echo "ARM64 build failed"
                        }
                    }
                }
            }
        }

        stage('Pull images'){
            steps{
                script{
                    withCredentials([usernamePassword( credentialsId: 'DockerhubCredentials', usernameVariable: 'USER', passwordVariable: 'PASSWORD')]) {
                        def registry_url = "registry.hub.docker.com/"
                        sh "docker login -u $USER -p $PASSWORD ${registry_url}"
                        sh "docker pull ${registry_url}tetricz/yt-archive:amd64-build-${env.BUILD_ID}"
                        sh "docker pull ${registry_url}tetricz/yt-archive:aarch64-build-${env.BUILD_ID}"
                    }
                }
            }
        }
        stage('Update Manifest'){
            steps{
                echo "Updating manifest...First we test if this works as is"
                echo "${env.BUILD_ID}"
            }
        }
    }
    post {
		always {
			sh 'docker logout'
		}
	}
}
